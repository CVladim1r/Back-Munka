# Архитектура проекта и базы данных

## Описание проекта

Проект представляет собой веб-приложение для управления рекрутинговой деятельностью, предназначенное как для кандидатов, так и для работодателей. Основной функционал включает регистрацию пользователей, управление вакансиями, поиск и отклик на вакансии, а также административные функции для модерации контента.

## Структура проекта
 
Проект структурирован на основе Flask-приложения с использованием SQLAlchemy для работы с базой данных. Все основные компоненты проекта находятся в папке `app`, которая содержит следующие подпапки и файлы:

- `app/
  - `__init__.py`: Инициализация Flask-приложения и настройка расширений (например, SQLAlchemy, Flask-Mail).
  - `config.py`: Конфигурационные настройки приложения, включая параметры для подключения к базе данных и настройки почты.
  - `models.py`: Определение моделей SQLAlchemy для работы с базой данных.
  - `routes/`: Папка с маршрутами и контроллерами Flask.
    - `__init__.py`: Инициализация Blueprint'ов и регистрация маршрутов.
    - `auth.py`: Маршруты для аутентификации, включая регистрацию, вход и выход.
    - `vacancies.py`: Маршруты для работы с вакансиями, включая создание и просмотр вакансий.
    - `profile.py`: Маршруты для работы с профилями пользователей, включая просмотр и изменение данных.
  - `templates/`: Папка с шаблонами HTML-страниц для отображения пользовательского интерфейса.

## Структура базы данных

База данных проектируется с использованием MySQL и содержит несколько таблиц для хранения данных, связанных с пользователями, вакансиями и другой информацией. Вот основные таблицы и их описание:

### Таблица `employers`

Хранит информацию о работодателях.

- `id`: Идентификатор работодателя (PRIMARY KEY).
- `email`: Email адрес работодателя.
- `password_hash`: Хеш пароля работодателя.
- `salt`: Соль для хеширования пароля (для безопасности).
- `created_at`: Дата и время создания записи.

### Таблица `employers_info`

Содержит дополнительную информацию о работодателях.

- `id`: Идентификатор записи (PRIMARY KEY).
- `employer_id`: Внешний ключ, связанный с таблицей `employers`.
- `full_name`: Полное имя работодателя.
- `phone`: Номер телефона работодателя.

### Таблица `vacancies`

Хранит информацию о вакансиях, размещенных работодателями.

- `id`: Идентификатор вакансии (PRIMARY KEY).
- `employer_id`: Внешний ключ, связанный с таблицей `employers`.
- `title`: Заголовок вакансии.
- `description`: Описание вакансии.
- `created_at`: Дата и время создания записи.
- `updated_at`: Дата и время последнего обновления записи.

### Таблица `employer_balance`

Хранит информацию о балансе средств у работодателей.

- `id`: Идентификатор записи (PRIMARY KEY).
- `employer_id`: Внешний ключ, связанный с таблицей `employers`.
- `balance`: Баланс работодателя.
- `last_updated`: Дата и время последнего обновления баланса.

## Технологии

Основные технологии, используемые в проекте:

- **Flask**: Микрофреймворк для создания веб-приложений на языке Python.
- **SQLAlchemy**: ORM для работы с базой данных в Flask.
- **Flask-Mail**: Расширение для отправки электронной почты из Flask-приложений.
- **JWT-Extended**: Расширение для работы с JSON Web Tokens для аутентификации и авторизации пользователей.
- **MySQL**: Реляционная база данных для хранения структурированных данных.
